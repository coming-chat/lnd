// Code generated by falafel 0.9.2 DO NOT EDIT.
package lndmobile

import (
	"sync"

	"google.golang.org/grpc"
	"google.golang.org/grpc/test/bufconn"
)

var (
	// lightningLis is a global in-memory buffer listeners that is
	// referenced by the generated mobile APIs, such that all client calls
	// will be going through it.
	lightningLis = bufconn.Listen(100)

	// serviceDialOptions is a global map from service names to a method
	// that is used to retrieve extra grpc options we'll apply every time
	// we dial the service's grpc server, such as TLS certificates.
	serviceDialOptions = make(map[string]func() ([]grpc.DialOption, error))

	// defaultDialOptions returns extra grpc options we'll apply in case
	// the service is not found in the serviceDialOptions.
	defaultDialOptions = func() ([]grpc.DialOption, error) {
		return nil, nil
	}

	// serviceDialOptionsMtx is a mutex used to grant exclusive access
	// to the above options variables.
	serviceDialOptionsMtx sync.Mutex
)

// RecreateListeners will re-create the in-memory listeners that will be
// referenced by the generated mobile APIs. This has to be called if the gRPC
// server has been restarted
func RecreateListeners() {
	lightningLis = bufconn.Listen(100)
}

// setDefaultDialOption sets the global default gprc option method.
func setDefaultDialOption(f func() ([]grpc.DialOption, error)) {
	serviceDialOptionsMtx.Lock()
	defer serviceDialOptionsMtx.Unlock()

	defaultDialOptions = f
}
